<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd">

    <context:property-placeholder ignore-unresolvable="true" local-override="true"
                                  location="classpath*:/application.properties"/>



    <!-- 使用annotation @Repository,@Service自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.lawer"/>

    <!-- 数据源配置, 使用BoneCP数据库连接池 -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>

        <property name="jdbcUrl" value="jdbc:mysql://59.110.174.97/ycare?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="zhao"/>
        <property name="password" value="root1234"/>


        <!-- 检查数据库连接池中空闲连接的间隔时间  -->
        <property name="idleConnectionTestPeriod" value="${bonecp.idleConnectionTestPeriod}" />
        <!-- 连接池中未使用的链接最大存活时间  -->
        <property name="idleMaxAge" value="${bonecp.idleMaxAge}" />
        <!-- 设置每个分区含有connection最大个数  -->
        <property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}" />
        <!-- 设置每个分区含有connection最小个数  -->
        <property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}" />
        <!-- 设置每个分区数  -->
        <property name="partitionCount" value="${bonecp.partitionCount}" />
        <!-- 设置分区中的connection增长数量  -->
        <property name="acquireIncrement" value="${bonecp.acquireIncrement}" />
        <property name="statementsCacheSize" value="${bonecp.statementsCacheSize}"/>
        <property name="releaseHelperThreads" value="${bonecp.releaseHelperThreads}"/>
        <property name="poolAvailabilityThreshold" value="${bonecp.poolAvailabilityThreshold}"/>
        <property name="connectionTimeout" value="${bonecp.connectionTimeout}"/>
    </bean>

    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="com.lawer.domain"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.service.jdbc.connections.spi.provider_class">com.jolbox.bonecp.provider.BoneCPConnectionProvider</prop>

                <!--                 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop> -->
                <!--                 <prop key="hibernate.format_sql">${hibernate.format_sql}</prop> -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!--  <prop key="hibernate.hbm2ddl.auto">update</prop> -->
            </props>
        </property>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg index="0" ref="dataSource"/>
    </bean>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.lawer.dao" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>

    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!-- 以静态变量保存ApplicationContext -->
    <bean class="com.lawer.module.SpringContextHolder" lazy-init="false" />

    <task:annotation-driven/>

</beans>
